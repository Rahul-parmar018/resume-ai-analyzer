# Generated by Django 5.0.6 on 2025-10-16 09:52

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AnalysisResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('candidate_name', models.CharField(default='Unknown', max_length=200)),
                ('candidate_email', models.EmailField(blank=True, max_length=254)),
                ('candidate_phone', models.CharField(blank=True, max_length=50)),
                ('job_title', models.CharField(default='Unknown Position', max_length=200)),
                ('total_score', models.FloatField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('technical_skills_score', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('experience_score', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(30)])),
                ('education_score', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(15)])),
                ('tools_score', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(15)])),
                ('match_level', models.CharField(choices=[('strong', 'Strong Match'), ('good', 'Good Match'), ('moderate', 'Moderate Match'), ('weak', 'Weak Match'), ('unknown', 'Unknown')], default='unknown', max_length=20)),
                ('skills_found', models.TextField(blank=True)),
                ('missing_skills', models.TextField(blank=True)),
                ('recommendations', models.TextField(blank=True)),
                ('summary', models.TextField(blank=True)),
                ('full_analysis', models.TextField(blank=True)),
                ('analyzer_used', models.CharField(choices=[('gpt', 'OpenAI GPT'), ('gemini', 'Google Gemini'), ('local', 'Local Analysis')], default='local', max_length=20)),
                ('analysis_date', models.DateTimeField(auto_now_add=True)),
                ('processing_time', models.FloatField(default=0)),
                ('analyzed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='analyses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-analysis_date'],
            },
        ),
        migrations.CreateModel(
            name='APIUsage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('api_type', models.CharField(choices=[('openai', 'OpenAI'), ('gemini', 'Google Gemini')], max_length=20)),
                ('endpoint', models.CharField(max_length=100)),
                ('model_used', models.CharField(max_length=50)),
                ('prompt_tokens', models.IntegerField(default=0)),
                ('completion_tokens', models.IntegerField(default=0)),
                ('total_tokens', models.IntegerField(default=0)),
                ('estimated_cost', models.DecimalField(decimal_places=6, default=0, max_digits=10)),
                ('success', models.BooleanField(default=True)),
                ('error_message', models.TextField(blank=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='JobPosting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('company_name', models.CharField(blank=True, max_length=200, null=True)),
                ('location', models.CharField(blank=True, max_length=200, null=True)),
                ('salary_range', models.CharField(blank=True, max_length=100, null=True)),
                ('required_skills', models.TextField(blank=True)),
                ('preferred_skills', models.TextField(blank=True)),
                ('experience_years', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(50)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='job_postings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BatchAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_title', models.CharField(max_length=200)),
                ('total_resumes', models.IntegerField(default=0)),
                ('processed_resumes', models.IntegerField(default=0)),
                ('failed_resumes', models.IntegerField(default=0)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('results', models.ManyToManyField(blank=True, related_name='batch_analysis', to='resumes.analysisresult')),
                ('job_posting', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='batch_analyses', to='resumes.jobposting')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='analysisresult',
            name='job_posting',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='analyses', to='resumes.jobposting'),
        ),
        migrations.CreateModel(
            name='Resume',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='resumes/%Y/%m/%d/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'docx', 'doc', 'txt'])])),
                ('original_filename', models.CharField(max_length=255)),
                ('file_size', models.IntegerField()),
                ('file_type', models.CharField(max_length=10)),
                ('extracted_text', models.TextField(blank=True)),
                ('candidate_name', models.CharField(blank=True, max_length=200)),
                ('candidate_email', models.EmailField(blank=True, max_length=254)),
                ('candidate_phone', models.CharField(blank=True, max_length=50)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('is_analyzed', models.BooleanField(default=False)),
                ('analysis_count', models.IntegerField(default=0)),
                ('uploaded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='uploaded_resumes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.AddField(
            model_name='analysisresult',
            name='resume',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='analyses', to='resumes.resume'),
        ),
        migrations.CreateModel(
            name='UserPreferences',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('default_job_title', models.CharField(blank=True, max_length=200)),
                ('default_analyzer', models.CharField(choices=[('gpt', 'GPT'), ('gemini', 'Gemini'), ('local', 'Local')], default='gpt', max_length=20)),
                ('email_on_completion', models.BooleanField(default=True)),
                ('preferred_gpt_model', models.CharField(default='gpt-3.5-turbo', max_length=50)),
                ('results_per_page', models.IntegerField(default=10)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='resume_preferences', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
